<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.simplemysqldemo.dao.BorrowRecordMapper">
  <resultMap id="BaseResultMap" type="com.example.simplemysqldemo.po.BorrowRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="book_id" jdbcType="INTEGER" property="bookId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, book_id, student_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrow_record
    where id = #{id,jdbcType=INTEGER}
  </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrow_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.simplemysqldemo.po.BorrowRecord">
    insert into borrow_record (id, book_id, student_id
      )
    values (#{id,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.example.simplemysqldemo.po.BorrowRecord">
    insert into borrow_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="bookId != null">
        book_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.simplemysqldemo.po.BorrowRecord">
    update borrow_record
    <set>
      <if test="bookId != null">
        book_id = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.simplemysqldemo.po.BorrowRecord">
    update borrow_record
    set book_id = #{bookId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>


  <select id="listByQueryVO" resultType="com.example.simplemysqldemo.vo.BorrowVO">
    select borrow.id, student.id studentId, student.name studentName, book.id bookId, book.name bookName from
    borrow_record borrow inner join student on student.id = borrow.id inner join book on book.id = borrow.id  where 1 = 1
    <if test="queryVO.studentId != null">
      and student.id = #{queryVO.studentId}
    </if>
    <if test="queryVO.bookId != null">
      and book.id = #{queryVO.bookId}
    </if>
    order by id desc
    limit #{queryVO.offset}, #{queryVO.size}
  </select>
  <select id="countByQueryVO" resultType="java.lang.Integer">
    select count(*) from
    borrow_record where 1=1
    <if test="queryVO.studentId != null">
      and student_id = #{queryVO.studentId}
    </if>
    <if test="queryVO.bookId != null">
      and book_id = #{queryVO.bookId}
    </if>
  </select>
</mapper>